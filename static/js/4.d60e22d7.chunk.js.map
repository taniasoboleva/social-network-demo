{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","Redirect","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,QAAU,yBAAyB,QAAU,2B,sGCU1QC,EAPI,SAACC,GAChB,IAAIC,EAAO,WAAaD,EAAME,GAC9B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCAnBC,EAJC,SAACT,GACb,OAAO,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,iCCsCtCC,EAAcC,YAAiB,IAgB/BC,EAAmBC,YAAW,CAAEC,KAAM,wBAAnBD,EAdF,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACA,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAYC,IACZC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBAAiBe,YAAY,yBAE7C,8BACI,kDAQGC,EApDC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBN,GAAI4B,EAAE5B,IAAZ4B,EAAE5B,OAC1E6B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE/B,OAC9DuB,EAAMS,eAQ3B,OAAKlC,EAAMmC,OAMP,sBAAKhC,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAEgC,aAAlB,SACKT,IAEL,qBAAKxB,UAAWC,IAAE4B,SAAlB,SACI,8BAAMD,MAEV,cAAClB,EAAD,CAAkBG,SAjBN,SAACqB,GACjBrC,EAAMsC,YAAYD,EAAOH,sBAGH,cAAC,IAAMK,SAAP,CAAgBhC,GAAG,Y,uDCnB7CiC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,OCgBRO,sBACXC,aAdkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACJ,GACVU,EAASC,YAAmBX,UDRR,SAACY,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKhD,MAAMmC,OAET,cAACW,EAAD,eAAeE,KAAKhD,QAFI,cAACuC,EAAA,EAAD,CAAUhC,GAAG,eAJT,GAEX0C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAqCI,KCG/DL,CAGZlB","file":"static/js/4.d60e22d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__nPr7g\",\"dialogsItems\":\"Dialogs_dialogsItems__1B6by\",\"dialog\":\"Dialogs_dialog__hD3of\",\"active\":\"Dialogs_active__26Q2E\",\"messages\":\"Dialogs_messages__3J5UR\",\"message\":\"Dialogs_message__1JDYg\",\"newPost\":\"Dialogs_newPost__j4_QN\",\"addPost\":\"Dialogs_addPost__2N1Ja\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs\" + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n    //sozdala peremennuju\r\n    // let history = useHistory();\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <React.Redirect to=\"/login\" />;\r\n    //pomenjala funkciju\r\n    // if (!props.isAuth) return history.push(\"/login\");\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <MessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component= {Textarea}\r\n                   validate={[required, maxLength50]}\r\n                   name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>\r\n    )}\r\n\r\nconst MessageReduxForm = reduxForm ({ form: 'dialogAddMessageForm' }) (AddMessageForm)\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}